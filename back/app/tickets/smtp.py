import io
import os
import smtplib
from email.message import EmailMessage

from pathlib import Path
from typing import Dict, List, Optional

from app.config import settings
from pydantic import SecretStr

TICKET_PLAIN_TEMPLATE = """
–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!
–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –≤–∑–Ω–æ—Å –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å Art Labyrinth!
–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ —á–∞—Å—Ç—å—é —ç—Ç–æ–≥–æ –≤–æ–ª—à–µ–±–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.

–í —ç—Ç–æ–º –ø–∏—Å—å–º–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤–∞—à–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:
üì≤ –ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
üìÑ PDF-—Ñ–∞–π–ª –¥–ª—è –ø–µ—á–∞—Ç–∏

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –≤–µ—Ä—Å–∏–π –≤ Welcome-—Ü–µ–Ω—Ç—Ä–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –ø—Ä–∏ –≤—Ö–æ–¥–µ.

üéâ –¢–∞–∫–∂–µ –º—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É —Ñ–µ—Å—Ç–∏–≤–∞–ª—è, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –∑–∞—Ä–∞–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–±—ã—Ç–∏–π –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:
https://fest.art-labyrinth.org

üí° –ú—ã —Ç–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π:
 üéí –û—Å–Ω–æ–≤–Ω–æ–µ:
‚úîÔ∏è –ü–∞–ª–∞—Ç–∫–∞ –∏ –∫–æ–≤—Ä–∏–∫ / –∫–∞—Ä–µ–º–∞—Ç (—á—Ç–æ–±—ã –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Å–ø–∞—Ç—å)
‚úîÔ∏è –°–ø–∞–ª—å–Ω–∏–∫ –∏–ª–∏ —Ç–µ–ø–ª–æ–µ –æ–¥–µ—è–ª–æ
‚úîÔ∏è –õ–µ–≥–∫–∞—è –∏ —É–¥–æ–±–Ω–∞—è –æ–¥–µ–∂–¥–∞ + —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞ (–≤–µ—á–µ—Ä–æ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ)
‚úîÔ∏è –£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å
‚úîÔ∏è –î–æ–∂–¥–µ–≤–∏–∫ –∏–ª–∏ –ø–ª–∞—â (–Ω–∞ —Å–ª—É—á–∞–π –¥–æ–∂–¥—è)
‚úîÔ∏è –ö—É–ø–∞–ª—å–Ω–∏–∫ –∏–ª–∏ –ø–ª–∞–≤–∫–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–¥–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)

üí° –î–ª—è –±—ã—Ç–∞:
‚úîÔ∏è –§–æ–Ω–∞—Ä–∏–∫ / –Ω–∞–ª–æ–±–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å + –∑–∞–ø–∞—Å–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏
‚úîÔ∏è –õ–∏—á–Ω–∞—è –∞–ø—Ç–µ—á–∫–∞ (–ø–ª–∞—Å—Ç—ã—Ä–∏, –π–æ–¥, –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–µ, —Ä–µ–ø–µ–ª–ª–µ–Ω—Ç –æ—Ç –∫–æ–º–∞—Ä–æ–≤ –∏ —Ç.–¥.)
‚úîÔ∏è –ú–Ω–æ–≥–æ—Ä–∞–∑–æ–≤–∞—è –ø–æ—Å—É–¥–∞: –∫—Ä—É–∂–∫–∞, —Ç–∞—Ä–µ–ª–∫–∞, –ª–æ–∂–∫–∞ / –≤–∏–ª–∫–∞
‚úîÔ∏è –í–æ–¥–∞ –∏–ª–∏ –±—É—Ç—ã–ª–∫–∞ –¥–ª—è –≤–æ–¥—ã (–Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –±—É–¥—É—Ç —Ç–æ—á–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è)
‚úîÔ∏è –ü–æ–ª–æ—Ç–µ–Ω—Ü–µ,
‚úîÔ∏è –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≥–∏–≥–∏–µ–Ω—ã

üåø –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ:
‚úîÔ∏è –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –ª—é–±–∏—à—å –∏–≥—Ä–∞—Ç—å
‚úîÔ∏è –ö–æ—Å—Ç—é–º –¥–ª—è –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å–æ–≤, –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç–æ–≤ (–µ—Å–ª–∏ —É—á–∞—Å—Ç–≤—É–µ—à—å!)
‚úîÔ∏è –ë–ª–æ–∫–Ω–æ—Ç –∏–ª–∏ –¥–Ω–µ–≤–Ω–∏–∫ (–º–æ–∂–Ω–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è)

‚ú® –î–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã:
‚úîÔ∏è –£–∫—Ä–∞—à–µ–Ω–∏—è, —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Å—Ç—é–º–∞ ‚Äî –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
‚úîÔ∏è –û—Ç–∫—Ä—ã—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è–º

üéâ –§–µ—Å—Ç–∏–≤–∞–ª—å Art Labyrinth ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è, —Ç–∞–∫ —á—Ç–æ –±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —Å–≤–æ–±–æ–¥–Ω–æ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–Ω–æ!

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:
üìß info@art-labyrinth.org
üí¨ https://t.me/+wpqpF2uV3-IzZTQ6

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –≤–æ–ª—à–µ–±–Ω–æ–º –õ–∞–±–∏—Ä–∏–Ω—Ç–µ!
"""


TICKET_TEMPLATE = '''
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>–í–∞—à –±–∏–ª–µ—Ç –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å Art Labyrinth</title>
</head>
<body style="font-family: Arial, sans-serif; color: #222; background: #fff;">
    <h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!</h2>
    <p>–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–¥–µ–ª–∞–ª–∏ –≤–∑–Ω–æ—Å –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å <b>Art Labyrinth</b>!<br>
    –ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Å—Ç–∞–Ω–µ—Ç–µ —á–∞—Å—Ç—å—é —ç—Ç–æ–≥–æ –≤–æ–ª—à–µ–±–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.</p>
    <p>–í —ç—Ç–æ–º –ø–∏—Å—å–º–µ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤–∞—à–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:</p>
    <ul>
        <li>üì≤ <b>–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è</b></li>
        <li>üìÑ <b>PDF-—Ñ–∞–π–ª –¥–ª—è –ø–µ—á–∞—Ç–∏</b></li>
    </ul>
    <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—ä—è–≤–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —ç—Ç–∏—Ö –≤–µ—Ä—Å–∏–π –≤ Welcome-—Ü–µ–Ω—Ç—Ä–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –ø—Ä–∏ –≤—Ö–æ–¥–µ.</p>
    <img src="cid:ticket_image" alt="Ticket" style="max-width:100%;border:1px solid #ccc;">
    <img src="cid:static_image" alt="Rules" style="max-width:100%;border:1px solid #ccc;">
    <hr>
    <!--
        <p>üéâ –¢–∞–∫–∂–µ –º—ã –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º—É —Ñ–µ—Å—Ç–∏–≤–∞–ª—è, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –∑–∞—Ä–∞–Ω–µ–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–±—ã—Ç–∏–π –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:<br>
            <a href="https://fest.art-labyrinth.org" style="color: #2a7ae2;">–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è</a></p>
        <hr>
    -->
    <h3>üí° –ú—ã —Ç–∞–∫–∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π:</h3>
    <ul>
        <li><b>üéí –û—Å–Ω–æ–≤–Ω–æ–µ:</b>
            <ul>
                <li>‚úîÔ∏è –ü–∞–ª–∞—Ç–∫–∞ –∏ –∫–æ–≤—Ä–∏–∫ / –∫–∞—Ä–µ–º–∞—Ç (—á—Ç–æ–±—ã –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ —Å–ø–∞—Ç—å)</li>
                <li>‚úîÔ∏è –°–ø–∞–ª—å–Ω–∏–∫ –∏–ª–∏ —Ç–µ–ø–ª–æ–µ –æ–¥–µ—è–ª–æ</li>
                <li>‚úîÔ∏è –õ–µ–≥–∫–∞—è –∏ —É–¥–æ–±–Ω–∞—è –æ–¥–µ–∂–¥–∞ + —Ç–µ–ø–ª–∞—è –æ–¥–µ–∂–¥–∞ (–≤–µ—á–µ—Ä–æ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ)</li>
                <li>‚úîÔ∏è –£–¥–æ–±–Ω–∞—è –æ–±—É–≤—å</li>
                <li>‚úîÔ∏è –î–æ–∂–¥–µ–≤–∏–∫ –∏–ª–∏ –ø–ª–∞—â (–Ω–∞ —Å–ª—É—á–∞–π –¥–æ–∂–¥—è)</li>
                <li>‚úîÔ∏è –ö—É–ø–∞–ª—å–Ω–∏–∫ –∏–ª–∏ –ø–ª–∞–≤–∫–∏ (–µ—Å–ª–∏ –±—É–¥—É—Ç –≤–æ–¥–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)</li>
            </ul>
        </li>
        <li><b>üí° –î–ª—è –±—ã—Ç–∞:</b>
            <ul>
                <li>‚úîÔ∏è –§–æ–Ω–∞—Ä–∏–∫ / –Ω–∞–ª–æ–±–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å + –∑–∞–ø–∞—Å–Ω—ã–µ –±–∞—Ç–∞—Ä–µ–π–∫–∏</li>
                <li>‚úîÔ∏è –õ–∏—á–Ω–∞—è –∞–ø—Ç–µ—á–∫–∞ (–ø–ª–∞—Å—Ç—ã—Ä–∏, –π–æ–¥, –∞–Ω—Ç–∏–≥–∏—Å—Ç–∞–º–∏–Ω–Ω—ã–µ, —Ä–µ–ø–µ–ª–ª–µ–Ω—Ç –æ—Ç –∫–æ–º–∞—Ä–æ–≤ –∏ —Ç.–¥.)</li>
                <li>‚úîÔ∏è –ú–Ω–æ–≥–æ—Ä–∞–∑–æ–≤–∞—è –ø–æ—Å—É–¥–∞: –∫—Ä—É–∂–∫–∞, —Ç–∞—Ä–µ–ª–∫–∞, –ª–æ–∂–∫–∞ / –≤–∏–ª–∫–∞</li>
                <li>‚úîÔ∏è –í–æ–¥–∞ –∏–ª–∏ –±—É—Ç—ã–ª–∫–∞ –¥–ª—è –≤–æ–¥—ã (–Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –±—É–¥—É—Ç —Ç–æ—á–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è)</li>
                <li>‚úîÔ∏è –ü–æ–ª–æ—Ç–µ–Ω—Ü–µ</li>
                <li>‚úîÔ∏è –ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –≥–∏–≥–∏–µ–Ω—ã</li>
            </ul>
        </li>
        <li><b>üåø –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ:</b>
            <ul>
                <li>‚úîÔ∏è –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –ª—é–±–∏—à—å –∏–≥—Ä–∞—Ç—å</li>
                <li>‚úîÔ∏è –ö–æ—Å—Ç—é–º –¥–ª—è –ø–µ—Ä—Ñ–æ—Ä–º–∞–Ω—Å–æ–≤, –∞—Ä—Ç-–æ–±—ä–µ–∫—Ç–æ–≤ (–µ—Å–ª–∏ —É—á–∞—Å—Ç–≤—É–µ—à—å!)</li>
                <li>‚úîÔ∏è –ë–ª–æ–∫–Ω–æ—Ç –∏–ª–∏ –¥–Ω–µ–≤–Ω–∏–∫ (–º–æ–∂–Ω–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è)</li>
            </ul>
        </li>
        <li><b>‚ú® –î–ª—è –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã:</b>
            <ul>
                <li>‚úîÔ∏è –£–∫—Ä–∞—à–µ–Ω–∏—è, —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Å—Ç—é–º–∞ ‚Äî –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è</li>
                <li>‚úîÔ∏è –û—Ç–∫—Ä—ã—Ç–æ–µ —Å–µ—Ä–¥—Ü–µ –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è–º</li>
            </ul>
        </li>
    </ul>
    <hr>
    <p>üéâ <b>–§–µ—Å—Ç–∏–≤–∞–ª—å Art Labyrinth</b> ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏—è, —Ç–∞–∫ —á—Ç–æ –±–µ—Ä–∏ —Ç–æ, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è —Å–≤–æ–±–æ–¥–Ω–æ –∏ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–Ω–æ!</p>
    <p>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:<br>
    üìß <a href="mailto:info@art-labyrinth.org">info@art-labyrinth.org</a><br>
    üí¨ <a href="https://t.me/+wpqpF2uV3-IzZTQ6">https://t.me/+wpqpF2uV3-IzZTQ6</a></p>
    <p>–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –≤–æ–ª—à–µ–±–Ω–æ–º –õ–∞–±–∏—Ä–∏–Ω—Ç–µ!</p>
</body>
</html>
'''

# Example templates message
EMAIL_TEMPLATES: Dict[str, Dict[str, str | bool]] = {
    'factura': {
        'subject': '–§–∞–∫—Ç—É—Ä–∞ ‚Ññ{invoice_number}',
        'body': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!\n\n–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ –≤–∞—à–∞ —Ñ–∞–∫—Ç—É—Ä–∞ ‚Ññ{invoice_number}.',
    },
    'thanks_coming': {
        'subject': '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!',
        'body': '<h1>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!</h1><p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!</p><p>–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ.</p>',
        'is_html': True
    },
    'with_attachments': {
        'subject': 'Art-Labyrinth Ticket',
        'body': '<h2>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!</h2><p>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–µ–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è.</p>',
        'is_html': True
    }
}
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
SOURCE_FILE = os.path.join(BASE_DIR, "M2.png")


class SMTPClient:
    def __init__(self, host: str, port: int, user: str, password: SecretStr, use_tls: bool = True):
        self.host = host
        self.port = port
        self.user = user
        self.password = password.get_secret_value() if isinstance(password, SecretStr) else password
        self.use_tls = use_tls

    def send_mail(self, to_email: str, template: str, context: Dict[str, str]):
        tpl = EMAIL_TEMPLATES[template]
        subject = str(tpl['subject']).format(**context) if isinstance(tpl['subject'], str) else ''
        body = str(tpl['body']).format(**context) if isinstance(tpl['body'], str) else ''
        is_html = tpl.get('is_html', False)

        msg = EmailMessage()
        msg['Subject'] = subject
        msg['From'] = self.user
        msg['To'] = to_email

        inline_images = []
        html_body = body
        # –°–Ω–∞—á–∞–ª–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —á–∞—Å—Ç–∏
        if is_html:
            try:
                msg.set_content(body, subtype='plain')
            except Exception as e:
                import traceback
                print('ERROR: set_content:', e)
                print(traceback.format_exc())
                raise
            try:
                msg.add_alternative(html_body, subtype='html')
            except Exception as e:
                import traceback
                print('ERROR: add_alternative:', e)
                print(traceback.format_exc())
                raise
            payload = msg.get_payload()
            if isinstance(payload, list) and len(payload) > 0:
                html_part = payload[-1]
                if isinstance(html_part, EmailMessage):
                    try:
                        for img in inline_images:
                            html_part.add_related(
                                img['data'],
                                maintype='image',
                                subtype='png',
                                cid=img['cid'],
                                filename=img['filename'],
                                disposition='inline'
                            )
                    except Exception as e:
                        import traceback
                        print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ inline-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', e)
                        print(traceback.format_exc())
                        raise
        else:
            try:
                msg.set_content(body)
            except Exception as e:
                import traceback
                print('ERROR: set_content (plain):', e)
                print(traceback.format_exc())
                raise

        try:
            with smtplib.SMTP(self.host, self.port) as server:
                if self.use_tls:
                    server.starttls()
                server.login(self.user, self.password)
                server.send_message(msg)
        except Exception as e:
            import traceback
            print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', e)
            print(traceback.format_exc())
            raise

    def send_ticket_email(self, to_email: str, name: str, ticket_png: bytes, ticket_pdf: bytes):
        """
        –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–∏—Å—å–º–æ —Å –±–∏–ª–µ—Ç–∞–º–∏:
        - ticket_png (bytes): PNG-—Ñ–∞–π–ª –±–∏–ª–µ—Ç–∞, –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è inline –≤ —Ç–µ–ª–æ –ø–∏—Å—å–º–∞ –∏ –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ
        - ticket_pdf (bytes): PDF-—Ñ–∞–π–ª –±–∏–ª–µ—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç—Å—è –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ
        - SOURCE_FILE (png): —Å—Ç–∞—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è inline –≤ —Ç–µ–ª–æ –ø–∏—Å—å–º–∞
        """
        subject = '–í–∞—à –≤—Ö–æ–¥–Ω–æ–π –±–∏–ª–µ—Ç –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å "Art-Labyrinth"'
        # HTML-—à–∞–±–ª–æ–Ω —Å –¥–≤—É–º—è inline-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        html_body = TICKET_TEMPLATE.format(name=name)
        plain_body = TICKET_PLAIN_TEMPLATE.format(name=name)

        msg = EmailMessage()
        msg['Subject'] = subject
        msg['From'] = self.user
        msg['To'] = to_email

        # –°–Ω–∞—á–∞–ª–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —á–∞—Å—Ç–∏
        msg.set_content(plain_body)
        msg.add_alternative(html_body, subtype='html')

        # –î–æ–±–∞–≤–ª—è–µ–º inline-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ html-–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–µ
        payload = msg.get_payload()
        if isinstance(payload, list) and len(payload) > 0:
            html_part = payload[-1]
            if isinstance(html_part, EmailMessage):
                # –û—Å–Ω–æ–≤–Ω–æ–π –±–∏–ª–µ—Ç
                html_part.add_related(
                    ticket_png,
                    maintype='image',
                    subtype='png',
                    cid='ticket_image',
                    filename='ticket.png',
                    disposition='inline'
                )
                # –°—Ç–∞—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                with open(SOURCE_FILE, 'rb') as f:
                    static_png = f.read()
                html_part.add_related(
                    static_png,
                    maintype='image',
                    subtype='png',
                    cid='static_image',
                    filename='rules.png',
                    disposition='inline'
                )

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
        msg.add_attachment(ticket_png, maintype='image', subtype='png', filename='ticket.png')
        with open(SOURCE_FILE, 'rb') as f:
            static_png = f.read()
        msg.add_attachment(static_png, maintype='image', subtype='png', filename='rules.png')
        msg.add_attachment(ticket_pdf, maintype='application', subtype='pdf', filename='ticket.pdf')

        try:
            with smtplib.SMTP(self.host, self.port) as server:
                if self.use_tls:
                    server.starttls()
                server.login(self.user, self.password)
                server.send_message(msg)
        except Exception as e:
            import traceback
            print('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', e)
            print(traceback.format_exc())
            raise


# Example of the client‚Äôs initialization (parameters should be in settings)
smtp_client = SMTPClient(
    host=getattr(settings, 'SMTP_HOST', 'smtp.example.com'),
    port=int(getattr(settings, 'SMTP_PORT', 587)),
    user=getattr(settings, 'SMTP_USER', 'user@example.com'),
    password=getattr(settings, 'SMTP_PASSWORD', SecretStr('password')),
    use_tls=True
)

# Example of use:
# smtp_client.send_mail(
#     to_email='recipient@example.com',
#     template='with_attachments',
#     context={'name': 'Ivan'},
#     attachments=['/path/to/file1.pdf', '/path/to/file2.pdf', '/path/to/file3.pdf']
# )
